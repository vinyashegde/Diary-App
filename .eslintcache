[{"/workspaces/Diary-App/src/index.js":"1","/workspaces/Diary-App/src/App.js":"2","/workspaces/Diary-App/src/reportWebVitals.js":"3","/workspaces/Diary-App/src/config/fbConfig.js":"4","/workspaces/Diary-App/src/store/reducers/rootReducer.js":"5","/workspaces/Diary-App/src/components/dashboard/Dashboard.js":"6","/workspaces/Diary-App/src/components/layout/Navbar.js":"7","/workspaces/Diary-App/src/components/diaries/DiaryDetails.js":"8","/workspaces/Diary-App/src/components/diaries/CreateDiary.js":"9","/workspaces/Diary-App/src/components/diaries/EditDiary.js":"10","/workspaces/Diary-App/src/components/entries/EntryDetails.js":"11","/workspaces/Diary-App/src/components/entries/CreateEntry.js":"12","/workspaces/Diary-App/src/components/auth/SignIn.js":"13","/workspaces/Diary-App/src/components/auth/SignUp.js":"14","/workspaces/Diary-App/src/store/reducers/authReducer.js":"15","/workspaces/Diary-App/src/store/reducers/entryReducer.js":"16","/workspaces/Diary-App/src/store/reducers/diaryReducer.js":"17","/workspaces/Diary-App/src/store/reducers/dataReducer.js":"18","/workspaces/Diary-App/src/components/entries/EditEntry.js":"19","/workspaces/Diary-App/src/components/dashboard/Notifications.js":"20","/workspaces/Diary-App/src/components/layout/SignedInLinks.js":"21","/workspaces/Diary-App/src/components/layout/SignedOutLinks.js":"22","/workspaces/Diary-App/src/components/entries/EntriesList.js":"23","/workspaces/Diary-App/src/components/diaries/DiariesList.js":"24","/workspaces/Diary-App/src/store/actions/authActions.js":"25","/workspaces/Diary-App/src/store/actions/diaryActions.js":"26","/workspaces/Diary-App/src/store/actions/entryActions.js":"27","/workspaces/Diary-App/src/store/actions/dataActions.js":"28","/workspaces/Diary-App/src/components/diaries/DiarySummary.js":"29","/workspaces/Diary-App/src/components/entries/EntrySummary.js":"30","/workspaces/Diary-App/src/store/actions/functions/functions.js":"31"},{"size":2039,"mtime":1711398332827,"results":"32","hashOfConfig":"33"},{"size":1460,"mtime":1711398332827,"results":"34","hashOfConfig":"33"},{"size":362,"mtime":1711398332827,"results":"35","hashOfConfig":"33"},{"size":606,"mtime":1711398332827,"results":"36","hashOfConfig":"33"},{"size":654,"mtime":1711398332827,"results":"37","hashOfConfig":"33"},{"size":2122,"mtime":1711398332827,"results":"38","hashOfConfig":"33"},{"size":877,"mtime":1711398332827,"results":"39","hashOfConfig":"33"},{"size":2169,"mtime":1711398332827,"results":"40","hashOfConfig":"33"},{"size":2600,"mtime":1711398332827,"results":"41","hashOfConfig":"33"},{"size":4146,"mtime":1711398332827,"results":"42","hashOfConfig":"33"},{"size":2130,"mtime":1711398332827,"results":"43","hashOfConfig":"33"},{"size":2019,"mtime":1711398332827,"results":"44","hashOfConfig":"33"},{"size":1808,"mtime":1711398332827,"results":"45","hashOfConfig":"33"},{"size":2387,"mtime":1711398332827,"results":"46","hashOfConfig":"33"},{"size":613,"mtime":1711398332827,"results":"47","hashOfConfig":"33"},{"size":649,"mtime":1711398332827,"results":"48","hashOfConfig":"33"},{"size":1819,"mtime":1711398332827,"results":"49","hashOfConfig":"33"},{"size":312,"mtime":1711398332827,"results":"50","hashOfConfig":"33"},{"size":2867,"mtime":1711398332827,"results":"51","hashOfConfig":"33"},{"size":1585,"mtime":1711398332827,"results":"52","hashOfConfig":"33"},{"size":728,"mtime":1711398332827,"results":"53","hashOfConfig":"33"},{"size":345,"mtime":1711398332827,"results":"54","hashOfConfig":"33"},{"size":1753,"mtime":1711398332827,"results":"55","hashOfConfig":"33"},{"size":3113,"mtime":1711398332827,"results":"56","hashOfConfig":"33"},{"size":4826,"mtime":1711398332827,"results":"57","hashOfConfig":"33"},{"size":3657,"mtime":1711398332827,"results":"58","hashOfConfig":"33"},{"size":3320,"mtime":1711398332827,"results":"59","hashOfConfig":"33"},{"size":156,"mtime":1711398332827,"results":"60","hashOfConfig":"33"},{"size":3910,"mtime":1711398332827,"results":"61","hashOfConfig":"33"},{"size":2481,"mtime":1711398332827,"results":"62","hashOfConfig":"33"},{"size":412,"mtime":1711398332827,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"7m8vb7",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"66"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"66"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"66"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"66"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"66"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"66"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"66"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"/workspaces/Diary-App/src/index.js",[],["134","135"],"/workspaces/Diary-App/src/App.js",[],"/workspaces/Diary-App/src/reportWebVitals.js",[],"/workspaces/Diary-App/src/config/fbConfig.js",[],"/workspaces/Diary-App/src/store/reducers/rootReducer.js",[],"/workspaces/Diary-App/src/components/dashboard/Dashboard.js",[],"/workspaces/Diary-App/src/components/layout/Navbar.js",[],"/workspaces/Diary-App/src/components/diaries/DiaryDetails.js",["136","137"],"import React, { useEffect, useState } from \"react\";\nimport EntriesList from \"./../entries/EntriesList\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\nimport { getFirebase } from \"react-redux-firebase\";\nimport { Redirect } from \"react-router-dom\";\n\n//Project Details\nconst DiaryDetails = (props) => {\n  const id = props.match.params.id; // Get diary ID\n  const { entries, auth } = props;\n  let authorId = auth.uid;\n  let entriesToShow = [];\n  let [diaryName, setDiaryName] = useState(\"\");\n  let [showButton, setShowButton] = useState(false);\n\n  // Get DiaryName from firebase\n  const db = getFirebase().firestore();\n\n  // Find Entries\n  const findEntries = (entry) => {\n    return entry.diaryId === id;\n  };\n\n  useEffect(() => {\n    // Get DiaryName\n    db.collection(\"diaries\")\n      .doc(id)\n      .get()\n      .then((snapshot) => {\n        setDiaryName(snapshot.data().title);\n        if (snapshot.data().authorId === authorId) {\n          setShowButton(true);\n        }\n      })\n      .catch((err) => {\n        // No Data\n      });\n\n    if (entries) {\n      if (entries.find(findEntries)) {\n      } else {\n        // Redirect to dashboard\n        // history.push(\"/\");\n      }\n    }\n  }, [entries]);\n\n  entries &&\n    entries.map((entry) => {\n      if (id === entry.diaryId) {\n        entriesToShow.push(entry);\n      }\n    });\n\n  // Redirect\n  if (!auth.uid) return <Redirect to=\"/signin\" />;\n\n  return (\n    <div className=\"dashboard container\">\n      <div className=\"row\">\n        <div className=\"col s12 l10\">\n          {entriesToShow && (\n            <EntriesList\n              id={id}\n              entries={entriesToShow}\n              diaryName={diaryName}\n              showButton={showButton}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\n// Map State to props\nconst mapStateToProps = (state) => {\n  return {\n    entries: state.firestore.ordered.entries,\n    auth: state.firebase.auth,\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    { collection: \"entries\" }, // Collection entries\n  ])\n)(DiaryDetails);\n","/workspaces/Diary-App/src/components/diaries/CreateDiary.js",[],"/workspaces/Diary-App/src/components/diaries/EditDiary.js",["138"],"import React, { useState } from \"react\";\nimport { updateDiary } from \"../../store/actions/diaryActions\";\nimport { connect } from \"react-redux\";\nimport Swal from \"sweetalert2\";\nimport { useHistory } from \"react-router-dom\";\nimport { compose } from \"redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\n\n// EditDiary  Component\nconst EditDiary = (props) => {\n  const history = useHistory();\n  const urlArray = props.match.url.split(\"/\");\n  const diaryId = urlArray[2];\n  let diaryTitle = \"\";\n  let diaryType = \"\";\n\n  // Map\n  props.diaries.map((diary) => {\n    if (diary.id === diaryId) {\n      diaryTitle = diary.title;\n      diaryType = diary.type;\n    }\n  });\n\n  // State\n  const [state, setState] = useState({\n    diaryId: diaryId,\n    title: diaryTitle,\n    type: diaryType,\n    entryIds: [],\n  });\n\n  // Functions\n  const handleChange = (e) => {\n    setState({\n      ...state,\n      [e.target.id]: e.target.value,\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // Create diary\n    props.updateDiary(state);\n    // Show alert\n    Swal.fire({\n      icon: \"success\",\n      title: \"Diary Updated!\",\n      showConfirmButton: false,\n      timer: 1500,\n    }).then(() => {\n      // Redirect to dashboard\n      history.push(\"/\");\n    });\n  };\n\n  // Render\n  return (\n    <div className=\"container\">\n      <form onSubmit={handleSubmit} className=\"white\">\n        <h5 className=\"grey-text text-darken-3\">Edit Diary</h5>\n        <div className=\"input-field\">\n          <label htmlFor=\"title\"></label>\n          <input\n            required\n            defaultValue={diaryTitle}\n            type=\"text\"\n            id=\"title\"\n            onChange={handleChange}\n          />\n        </div>\n        Type:\n        {diaryType === \"public\" ? (\n          <>\n            <p>\n              <label>\n                <input\n                  className=\"with-gap\"\n                  name=\"type\"\n                  type=\"radio\"\n                  id=\"type\"\n                  required\n                  defaultChecked\n                  value=\"public\"\n                  onChange={handleChange}\n                />\n                <span>Public</span>\n              </label>\n            </p>\n            <p>\n              <label>\n                <input\n                  className=\"with-gap\"\n                  name=\"type\"\n                  id=\"type\"\n                  required\n                  type=\"radio\"\n                  value=\"private\"\n                  onChange={handleChange}\n                />\n                <span>Private</span>\n              </label>\n            </p>\n          </>\n        ) : (\n          <>\n            <p>\n              <label>\n                <input\n                  className=\"with-gap\"\n                  name=\"type\"\n                  type=\"radio\"\n                  id=\"type\"\n                  required\n                  value=\"public\"\n                  onChange={handleChange}\n                />\n                <span>Public</span>\n              </label>\n            </p>\n            <p>\n              <label>\n                <input\n                  className=\"with-gap\"\n                  name=\"type\"\n                  id=\"type\"\n                  required\n                  type=\"radio\"\n                  value=\"private\"\n                  defaultChecked\n                  onChange={handleChange}\n                />\n                <span>Private</span>\n              </label>\n            </p>\n          </>\n        )}\n        <div className=\"input-field\">\n          <button className=\"btn pink lighten-1 z-depth-0\">Confirm</button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\n// Map State to props\nconst mapStateToProps = (state) => {\n  return {\n    diaries: state.firestore.ordered.diaries,\n  };\n};\n\n// Map Dispatch to props\nconst mapDispatchToProps = (dispatch) => {\n  // Attach these to props\n  return {\n    // Take entry and pass to updateEntry action creator\n    updateDiary: (diary) => dispatch(updateDiary(diary)),\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  firestoreConnect([\n    { collection: \"dairies\" }, // Collection diaries\n  ])\n)(EditDiary);\n","/workspaces/Diary-App/src/components/entries/EntryDetails.js",["139","140"],"import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\nimport { BeatLoader } from \"react-spinners\";\nimport moment from \"moment\";\n\nfunction EntryDetails(props) {\n  // handle loading state\n  const [isLoading, setIsLoading] = useState(true);\n  const { entries } = props;\n  let entryTitle = \"\";\n  let entryContent = \"\";\n  let entryCreatedAt;\n\n  // Split url to get id's (2 = diaryId) (3=entryId)\n  const urlArray = props.match.url.split(\"/\");\n  const diaryId = urlArray[2];\n  const entryId = urlArray[3];\n\n  entries &&\n    entries.map((entry) => {\n      if (entry.id === entryId) {\n        entryTitle = entry.title;\n        entryContent = entry.content;\n        entryCreatedAt = entry.createdAt;\n      }\n    });\n\n  useEffect(() => {\n    // If entries are there make loader false\n    if (entries) {\n      setIsLoading(false);\n    } else {\n      setIsLoading(true);\n    }\n  }, [entries]);\n\n  if (isLoading) {\n    return (\n      <div\n        style={{\n          width: \"100%\",\n          height: \"100%\",\n          minHeight: \"90vh\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <BeatLoader loading />\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"container section entry-details\">\n        <div className=\"card z-depth-0\">\n          <div className=\"card-content\">\n            <span className=\"card-title\">{entryTitle}</span>\n            <pre style={{ width: \"100%\", overflow: \"auto\" }}>\n              {entryContent}\n            </pre>\n          </div>\n          <div className=\"card-action grey lighten-4 grey-text\">\n            <div>{moment(entryCreatedAt.toDate()).calendar()}</div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n// Map State to props\nconst mapStateToProps = (state) => {\n  return {\n    entries: state.firestore.ordered.entries,\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    { collection: \"entries\" }, // Collection entries\n  ])\n)(EntryDetails);\n","/workspaces/Diary-App/src/components/entries/CreateEntry.js",[],"/workspaces/Diary-App/src/components/auth/SignIn.js",[],"/workspaces/Diary-App/src/components/auth/SignUp.js",[],"/workspaces/Diary-App/src/store/reducers/authReducer.js",[],"/workspaces/Diary-App/src/store/reducers/entryReducer.js",[],"/workspaces/Diary-App/src/store/reducers/diaryReducer.js",[],"/workspaces/Diary-App/src/store/reducers/dataReducer.js",[],"/workspaces/Diary-App/src/components/entries/EditEntry.js",["141"],"import React, { useState } from \"react\";\nimport Swal from \"sweetalert2\";\nimport { useHistory } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { updateEntry } from \"../../store/actions/entryActions\";\nimport { compose } from \"redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\n\n// SignIn Class Component\nconst EditEntry = (props) => {\n  const history = useHistory();\n\n  // Split url to get id's (2 = diaryId) (3=entryId)\n  const urlArray = props.match.url.split(\"/\");\n  const diaryId = urlArray[2];\n  const entryId = urlArray[3];\n  let entryTitle = \"\";\n  let entryContent = \"\";\n\n  props.entries &&\n    props.entries.map((entry) => {\n      if (entry.diaryId === diaryId) {\n        if (entryId === entry.id) {\n          entryTitle = entry.title;\n          entryContent = entry.content;\n        }\n      }\n    });\n\n  // State\n  const [state, setState] = useState({\n    entryId: entryId,\n    title: entryTitle,\n    content: entryContent,\n  });\n\n  // Functions\n  const handleChange = (e) => {\n    setState({\n      ...state,\n      [e.target.id]: e.target.value,\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // Create entry\n    props.updateEntry(state);\n    // Show alert\n    Swal.fire({\n      icon: \"success\",\n      title: \"Entry updated!\",\n      showConfirmButton: false,\n      timer: 1500,\n    }).then(() => {\n      // Redirect to dashboard\n      history.push(`/diary/${diaryId}`);\n    });\n  };\n\n  // Render\n  return (\n    <div className=\"container\">\n      <form onSubmit={handleSubmit} className=\"white\">\n        <h5 className=\"grey-text text-darken-3\">Edit entry</h5>\n        <div className=\"input-field\">\n          <label htmlFor=\"title\"></label>\n          <input\n            required\n            defaultValue={entryTitle}\n            type=\"text\"\n            id=\"title\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"input-field\">\n          <label htmlFor=\"content\"></label>\n          <textarea\n            id=\"content\"\n            onChange={handleChange}\n            defaultValue={entryContent}\n            className=\"materialize-textarea\"\n          ></textarea>\n        </div>\n\n        <div className=\"input-field\">\n          <button className=\"btn pink lighten-1 z-depth-0\">Confirm</button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\n// Map State to props\nconst mapStateToProps = (state) => {\n  return {\n    entries: state.firestore.ordered.entries,\n  };\n};\n\n// Map Dispatch to props\nconst mapDispatchToProps = (dispatch) => {\n  // Attach these to props\n  return {\n    // Take entry and pass to updateEntry action creator\n    updateEntry: (entry) => dispatch(updateEntry(entry)),\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  firestoreConnect([\n    { collection: \"entries\" }, // Collection entries\n  ])\n)(EditEntry);\n","/workspaces/Diary-App/src/components/dashboard/Notifications.js",[],"/workspaces/Diary-App/src/components/layout/SignedInLinks.js",[],"/workspaces/Diary-App/src/components/layout/SignedOutLinks.js",[],"/workspaces/Diary-App/src/components/entries/EntriesList.js",[],"/workspaces/Diary-App/src/components/diaries/DiariesList.js",["142"],"import React from \"react\";\nimport DiarySummary from \"./DiarySummary\";\nimport { Link } from \"react-router-dom\";\nimport { setShowOtherDiaries } from \"./../../store/actions/dataActions\";\nimport { connect } from \"react-redux\";\nconst DiariesList = ({ diaries, authorId, data, setShowOtherDiaries }) => {\n  console.log(\"showOtherDiaries\", data.showOtherDiaries);\n  // Checkbox\n  let checkbox;\n  data.showOtherDiaries\n    ? (checkbox = (\n        <input\n          id=\"switch\"\n          type=\"checkbox\"\n          onChange={(e) => {\n            setShowOtherDiaries(!data.showOtherDiaries);\n          }}\n        />\n      ))\n    : (checkbox = (\n        <input\n          id=\"switch\"\n          type=\"checkbox\"\n          onChange={(e) => {\n            setShowOtherDiaries(!data.showOtherDiaries);\n          }}\n          defaultChecked\n        />\n      ));\n\n  return (\n    <div className=\"project-list section\">\n      <h4\n        className=\"card-title\"\n        style={{ color: \"#424242\", textShadow: \"2px 2px 2px #776a6a\" }}\n      >\n        Diaries\n        <span class=\"switch secondary-content\">\n          <label htmlFor=\"switch\">\n            <span\n              style={{\n                fontSize: \"1.3rem\",\n                color: \"brown\",\n                textShadow: \"1px 1px 1px gray\",\n              }}\n            >\n              My Diaries Only\n            </span>\n            {checkbox}\n            <span class=\"lever\"></span>\n          </label>\n        </span>\n      </h4>\n\n      <div className=\"divider\"></div>\n\n      {diaries &&\n        diaries.map((diary) => {\n          // Show Private diaries to that user only\n          if (diary.type === \"private\") {\n            if (diary.authorId === authorId) {\n              return (\n                <DiarySummary\n                  key={diary.id}\n                  diary={diary}\n                  authorId={authorId}\n                  canEdit={true}\n                />\n              );\n            }\n          } else if (diary.type === \"public\") {\n            // If user is authenticated, He can edit\n            if (diary.authorId === authorId) {\n              return (\n                <DiarySummary key={diary.id} diary={diary} canEdit={true} />\n              );\n            } else {\n              if (data.showOtherDiaries) {\n                return (\n                  <DiarySummary key={diary.id} diary={diary} canEdit={false} />\n                );\n              }\n            }\n          }\n        })}\n      <div className=\"fixed-action-btn\">\n        <Link\n          title=\"create new diary\"\n          className=\"btn-floating btn-large  waves-effect hoverable waves-light green\"\n          to=\"/create\"\n        >\n          <i className=\"material-icons\">add</i>\n        </Link>\n      </div>\n    </div>\n  );\n};\n\n// Map State to props\nconst mapStateToProps = (state) => {\n  return {\n    data: state.data,\n  };\n};\n\n// Map Dispatch to props\nconst mapDispatchToProps = (dispatch) => {\n  // Attach these to props\n  return {\n    setShowOtherDiaries: (value) => dispatch(setShowOtherDiaries(value)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DiariesList);\n","/workspaces/Diary-App/src/store/actions/authActions.js",[],"/workspaces/Diary-App/src/store/actions/diaryActions.js",["143","144"],"import { createNotification } from \"./functions/functions\";\nimport Swal from \"sweetalert2\";\n\n// Create Diary Action\nexport const createDiary = (diary) => {\n  return (dispatch, getState, { getFirebase }) => {\n    // Make Async call to database\n    // Initialize Firestore Database\n    // Setup Database\n    const db = getFirebase().firestore();\n    const profile = getState().firebase.profile; // Get User's Profile\n    const authorId = getState().firebase.auth.uid; // Get User Id\n\n    // Add Diary to collection\n    db.collection(\"diaries\")\n      .add({\n        ...diary, // Title and type\n        authorFirstName: profile.firstName, // authorFirstName\n        authorLastName: profile.lastName, // authorLastName\n        authorId: authorId, // authorId\n        createdAt: new Date(), // createdAt\n      })\n      .then(() => {\n        // When Diary is added\n        // Then dispatch an action\n        dispatch({ type: \"CREATE_DIARY\", diary });\n\n        if (diary.type === \"public\") {\n          // // Create Notification\n          const notification = {\n            content: \"Added a new project\",\n            user: `${profile.firstName} ${profile.lastName}`,\n            time: new Date(),\n          };\n\n          createNotification(db, notification, dispatch);\n        }\n      })\n      .catch((err) => {\n        // If anything goes wrong\n        dispatch({ type: \"CREATE_DIARY_ERROR\", err });\n      });\n  };\n};\n\n// Update Diary Action\nexport const updateDiary = (diary) => {\n  return (dispatch, getState, { getFirebase }) => {\n    // Make Async call to database\n    // Initilalize db\n    const db = getFirebase().firestore();\n\n    const collection = \"diaries\";\n    const id = diary.diaryId;\n    const newTitle = diary.title;\n    const newType = diary.type;\n\n    // update entry\n    const diaryToUpdate = db.collection(collection).doc(id);\n\n    diaryToUpdate\n      .update({\n        title: newTitle,\n        type: newType,\n      })\n      .then(() => {\n        // Diary Updated\n        // Then dispatch an action\n        dispatch({ type: \"UPDATE_DIARY\", diary });\n      })\n      .catch((err) => {\n        // If anything goes wrong\n        dispatch({ type: \"UPDATE_DIARY_ERROR\", err });\n      });\n  };\n};\n\n// Delete Diary Action\nexport const deleteDiary = (diary) => {\n  return (dispatch, getState, { getFirebase }) => {\n    // Initialize Firestore Database\n    const db = getFirebase().firestore();\n\n    // Delete entries\n    const deleteEntries = async () => {\n      return await Promise.all(\n        diary.entryIds.map(async (entryId) => {\n          const data = await db.collection(\"entries\").doc(entryId).delete();\n        })\n      );\n    };\n\n    const deleteEntryIds = async () => {\n      // delete entries first\n      const wait = await deleteEntries();\n\n      // After entries are deleted\n      // Delete diary\n\n      db.collection(\"diaries\")\n        .doc(diary.id)\n        .delete()\n        .then(() => {\n          // Diary Deleted\n          // Then dispatch an action\n          dispatch({ type: \"DELETE_DIARY\" });\n          Swal.fire(\"Deleted!\", \"Diary has been deleted.\", \"success\");\n        })\n        .catch((err) => {\n          // Entry delete error\n          dispatch({ type: \"DELETE_DIARY_ERROR\", err });\n        });\n    };\n\n    // Confirmation alert\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"You won't be able to revert this!\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes, delete it!\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        // Call delete\n        deleteEntryIds();\n      }\n    });\n  };\n};\n","/workspaces/Diary-App/src/store/actions/entryActions.js",[],"/workspaces/Diary-App/src/store/actions/dataActions.js",[],"/workspaces/Diary-App/src/components/diaries/DiarySummary.js",["145"],"/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Swal from \"sweetalert2\";\nimport { connect } from \"react-redux\";\nimport { deleteDiary, updateDiary } from \"../../store/actions/diaryActions\";\nimport moment from \"moment\";\n\nconst DiarySummary = ({\n  diary,\n  updateDiary,\n  deleteDiary,\n  userProfile,\n  canEdit,\n}) => {\n  // variables\n  const title = diary.title;\n  const type = diary.type;\n  const totalEntries = diary.entryIds.length;\n  const [userName, setUserName] = useState(\n    `${diary.authorFirstName} ${diary.authorLastName}`\n  );\n\n  if (userName === `${userProfile.firstName} ${userProfile.lastName}`) {\n    setUserName(\"You\");\n  }\n\n  // handleDelete\n  const handleDelete = () => {\n    //logic\n    deleteDiary(diary);\n  };\n\n  // Button conditional rendering\n  const addButton = canEdit ? (\n    <Link\n      to={\"/diary/\" + diary.id + \"/create\"}\n      className=\"btn btn-small waves-effect  waves-light entries-btn\"\n      title=\"Add entry\"\n      style={{\n        width: \"9%\",\n        backgroundColor: \"#4aa69b\",\n      }}\n    >\n      <i className=\"material-icons right\">add</i>\n    </Link>\n  ) : null;\n\n  // Button conditional rendering\n  const editButton = canEdit ? (\n    <Link\n      to={\"/diary/\" + diary.id + \"/edit\"}\n      title=\"edit\"\n      style={{ color: \"#4aa69b\", margin: \"0 0.5rem\" }}\n      className=\"secondary-content\"\n    >\n      <i style={{ color: \"#424242\" }} className=\"material-icons edit-icon\">\n        create\n      </i>\n    </Link>\n  ) : null;\n\n  // Button conditional rendering\n  const deleteButton = canEdit ? (\n    <a\n      onClick={handleDelete}\n      title=\"delete\"\n      style={{ color: \"#4aa69b\" }}\n      className=\"secondary-content\"\n    >\n      <i style={{ color: \"#424242\" }} className=\"material-icons edit-icon\">\n        delete\n      </i>\n    </a>\n  ) : null;\n\n  return (\n    <div className=\"card hoverable z-depth-2 diary-summary\">\n      <div className=\"card-content grey-text text-darken-3\">\n        <div className=\"card-title\">\n          {title}\n          <a\n            title={type === \"private\" ? \"private\" : \"public\"}\n            className=\"secondary-content\"\n          >\n            <i\n              style={{ color: \"#424242\", cursor: \"default\" }}\n              className=\"material-icons\"\n            >\n              {type === \"private\" ? \"lock\" : \"lock_open\"}\n            </i>\n          </a>\n          {editButton}\n          {deleteButton}\n        </div>\n\n        <span\n          className=\"new badge\"\n          data-badge-caption={\n            totalEntries > 1 ? \"saved entries\" : \"saved entry\"\n          }\n        >\n          {totalEntries}\n        </span>\n\n        <p>\n          Posted by <span className=\"pink-text\">{userName}</span>\n        </p>\n\n        <p className=\"grey-text\">\n          {moment(diary.createdAt.toDate()).calendar()}\n        </p>\n        <div className=\"right-align\">\n          {totalEntries > 0 ? (\n            <Link\n              to={\"/diary/\" + diary.id}\n              className=\"btn btn-small waves-effect  waves-light entries-btn\"\n              title=\"View entries\"\n              style={{\n                width: \"50px\",\n                backgroundColor: \"#4aa69b\",\n              }}\n            >\n              <i className=\"material-icons\">send</i>\n            </Link>\n          ) : (\n            addButton\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\n// Map State to props\nconst mapStateToProps = (state) => {\n  return {\n    userProfile: state.firebase.profile,\n  };\n};\n\n// Map Dispatch to props\nconst mapDispatchToProps = (dispatch) => {\n  // Attach these to props\n  return {\n    // Take diary and pass to updateDiary action creator\n    updateDiary: (diary) => dispatch(updateDiary(diary)),\n    deleteDiary: (diary) => dispatch(deleteDiary(diary)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DiarySummary);\n","/workspaces/Diary-App/src/components/entries/EntrySummary.js",[],"/workspaces/Diary-App/src/store/actions/functions/functions.js",[],{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","severity":1,"message":"151","line":48,"column":6,"nodeType":"152","endLine":48,"endColumn":15,"suggestions":"153"},{"ruleId":"154","severity":1,"message":"155","line":51,"column":25,"nodeType":"156","messageId":"157","endLine":51,"endColumn":27},{"ruleId":"154","severity":1,"message":"155","line":18,"column":29,"nodeType":"156","messageId":"157","endLine":18,"endColumn":31},{"ruleId":"158","severity":1,"message":"159","line":18,"column":9,"nodeType":"160","messageId":"161","endLine":18,"endColumn":16},{"ruleId":"154","severity":1,"message":"155","line":22,"column":25,"nodeType":"156","messageId":"157","endLine":22,"endColumn":27},{"ruleId":"154","severity":1,"message":"155","line":21,"column":31,"nodeType":"156","messageId":"157","endLine":21,"endColumn":33},{"ruleId":"154","severity":1,"message":"162","line":58,"column":29,"nodeType":"156","messageId":"163","endLine":58,"endColumn":31},{"ruleId":"158","severity":1,"message":"164","line":88,"column":17,"nodeType":"160","messageId":"161","endLine":88,"endColumn":21},{"ruleId":"158","severity":1,"message":"165","line":95,"column":13,"nodeType":"160","messageId":"161","endLine":95,"endColumn":17},{"ruleId":"158","severity":1,"message":"166","line":4,"column":8,"nodeType":"160","messageId":"161","endLine":4,"endColumn":12},"no-native-reassign",["167"],"no-negated-in-lhs",["168"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'authorId', 'db', 'findEntries', and 'id'. Either include them or remove the dependency array.","ArrayExpression",["169"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-unused-vars","'diaryId' is assigned a value but never used.","Identifier","unusedVar","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'data' is assigned a value but never used.","'wait' is assigned a value but never used.","'Swal' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"170","fix":"171"},"Update the dependencies array to be: [authorId, db, entries, findEntries, id]",{"range":"172","text":"173"},[1274,1283],"[authorId, db, entries, findEntries, id]"]