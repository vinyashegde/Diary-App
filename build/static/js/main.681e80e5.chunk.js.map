{"version":3,"sources":["store/actions/functions/functions.js","store/actions/diaryActions.js","components/diaries/DiarySummary.js","components/diaries/DiariesList.js","store/actions/dataActions.js","components/dashboard/Notifications.js","components/dashboard/Dashboard.js","components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","store/actions/entryActions.js","components/entries/EntrySummary.js","components/entries/EntriesList.js","components/diaries/DiaryDetails.js","components/entries/EntryDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/diaries/CreateDiary.js","components/entries/CreateEntry.js","components/entries/EditEntry.js","components/diaries/EditDiary.js","App.js","reportWebVitals.js","store/reducers/authReducer.js","store/reducers/entryReducer.js","store/reducers/diaryReducer.js","store/reducers/dataReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["createNotification","firestore","notification","dispatch","collection","add","then","type","catch","err","updateDiary","diary","getState","db","getFirebase","id","diaryId","newTitle","title","newType","doc","update","connect","state","userProfile","firebase","profile","deleteDiary","deleteEntries","a","Promise","all","entryIds","map","entryId","delete","deleteEntryIds","Swal","fire","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","isConfirmed","canEdit","totalEntries","length","useState","authorFirstName","authorLastName","userName","setUserName","firstName","lastName","addButton","to","className","style","width","backgroundColor","editButton","color","margin","deleteButton","onClick","cursor","data-badge-caption","moment","createdAt","toDate","calendar","data","setShowOtherDiaries","value","checkbox","diaries","authorId","console","log","showOtherDiaries","onChange","e","defaultChecked","textShadow","class","htmlFor","fontSize","notifications","user","content","time","fromNow","Dashboard","this","props","auth","uid","padding","justifyContent","alignItems","minWidth","minHeight","height","display","loading","Component","compose","ordered","entries","firestoreConnect","orderBy","limit","signOut","showConfirmButton","timer","initials","SignedOutLinks","links","marginLeft","updateEntry","entry","newContent","deleteEntry","entryToDelete","get","snapshot","filter","history","useHistory","isAuthenticated","push","EntriesList","diaryName","showButton","isLoading","setIsLoading","button","useEffect","match","params","entriesToShow","setDiaryName","setShowButton","findEntries","find","entryCreatedAt","entryTitle","entryContent","urlArray","url","split","overflow","SignIn","email","password","handleChange","setState","target","handleSubmit","preventDefault","signIn","onSubmit","required","creds","credentials","signInWithEmailAndPassword","code","window","location","reload","SignUp","signUp","newUser","createUserWithEmailAndPassword","resp","set","Date","createDiary","name","createEntry","defaultValue","diaryTitle","diaryType","App","exact","path","component","DiaryDetails","CreateDiary","CreateEntry","EditDiary","EditEntry","EntryDetails","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","authError","authReducer","action","message","entryReducer","diaryReducer","dataReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","rrfProps","config","useFirestoreForProfile","createFirestoreInstance","AuthIsLoaded","children","useSelector","isLoaded","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.681e80e5.chunk.js","sourcesContent":["export const createNotification = (firestore, notification, dispatch) => {\n  firestore\n    .collection(\"notifications\")\n    .add(notification)\n    .then(() => {\n      // Notification success\n      dispatch({\n        type: \"CREATE_NOTIFICATION\",\n        notification,\n      });\n    })\n    .catch((err) => {\n      // Dispatch the Error Action\n      dispatch({ type: \"CREATE_NOTIFICATION_ERROR\", err });\n    });\n};\n","import { createNotification } from \"./functions/functions\";\nimport Swal from \"sweetalert2\";\n\n// Create Diary Action\nexport const createDiary = (diary) => {\n  return (dispatch, getState, { getFirebase }) => {\n    // Make Async call to database\n    // Initialize Firestore Database\n    // Setup Database\n    const db = getFirebase().firestore();\n    const profile = getState().firebase.profile; // Get User's Profile\n    const authorId = getState().firebase.auth.uid; // Get User Id\n\n    // Add Diary to collection\n    db.collection(\"diaries\")\n      .add({\n        ...diary, // Title and type\n        authorFirstName: profile.firstName, // authorFirstName\n        authorLastName: profile.lastName, // authorLastName\n        authorId: authorId, // authorId\n        createdAt: new Date(), // createdAt\n      })\n      .then(() => {\n        // When Diary is added\n        // Then dispatch an action\n        dispatch({ type: \"CREATE_DIARY\", diary });\n\n        if (diary.type === \"public\") {\n          // // Create Notification\n          const notification = {\n            content: \"Added a new project\",\n            user: `${profile.firstName} ${profile.lastName}`,\n            time: new Date(),\n          };\n\n          createNotification(db, notification, dispatch);\n        }\n      })\n      .catch((err) => {\n        // If anything goes wrong\n        dispatch({ type: \"CREATE_DIARY_ERROR\", err });\n      });\n  };\n};\n\n// Update Diary Action\nexport const updateDiary = (diary) => {\n  return (dispatch, getState, { getFirebase }) => {\n    // Make Async call to database\n    // Initilalize db\n    const db = getFirebase().firestore();\n\n    const collection = \"diaries\";\n    const id = diary.diaryId;\n    const newTitle = diary.title;\n    const newType = diary.type;\n\n    // update entry\n    const diaryToUpdate = db.collection(collection).doc(id);\n\n    diaryToUpdate\n      .update({\n        title: newTitle,\n        type: newType,\n      })\n      .then(() => {\n        // Diary Updated\n        // Then dispatch an action\n        dispatch({ type: \"UPDATE_DIARY\", diary });\n      })\n      .catch((err) => {\n        // If anything goes wrong\n        dispatch({ type: \"UPDATE_DIARY_ERROR\", err });\n      });\n  };\n};\n\n// Delete Diary Action\nexport const deleteDiary = (diary) => {\n  return (dispatch, getState, { getFirebase }) => {\n    // Initialize Firestore Database\n    const db = getFirebase().firestore();\n\n    // Delete entries\n    const deleteEntries = async () => {\n      return await Promise.all(\n        diary.entryIds.map(async (entryId) => {\n          const data = await db.collection(\"entries\").doc(entryId).delete();\n        })\n      );\n    };\n\n    const deleteEntryIds = async () => {\n      // delete entries first\n      const wait = await deleteEntries();\n\n      // After entries are deleted\n      // Delete diary\n\n      db.collection(\"diaries\")\n        .doc(diary.id)\n        .delete()\n        .then(() => {\n          // Diary Deleted\n          // Then dispatch an action\n          dispatch({ type: \"DELETE_DIARY\" });\n          Swal.fire(\"Deleted!\", \"Diary has been deleted.\", \"success\");\n        })\n        .catch((err) => {\n          // Entry delete error\n          dispatch({ type: \"DELETE_DIARY_ERROR\", err });\n        });\n    };\n\n    // Confirmation alert\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"You won't be able to revert this!\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes, delete it!\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        // Call delete\n        deleteEntryIds();\n      }\n    });\n  };\n};\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Swal from \"sweetalert2\";\nimport { connect } from \"react-redux\";\nimport { deleteDiary, updateDiary } from \"../../store/actions/diaryActions\";\nimport moment from \"moment\";\n\nconst DiarySummary = ({\n  diary,\n  updateDiary,\n  deleteDiary,\n  userProfile,\n  canEdit,\n}) => {\n  // variables\n  const title = diary.title;\n  const type = diary.type;\n  const totalEntries = diary.entryIds.length;\n  const [userName, setUserName] = useState(\n    `${diary.authorFirstName} ${diary.authorLastName}`\n  );\n\n  if (userName === `${userProfile.firstName} ${userProfile.lastName}`) {\n    setUserName(\"You\");\n  }\n\n  // handleDelete\n  const handleDelete = () => {\n    //logic\n    deleteDiary(diary);\n  };\n\n  // Button conditional rendering\n  const addButton = canEdit ? (\n    <Link\n      to={\"/diary/\" + diary.id + \"/create\"}\n      className=\"btn btn-small waves-effect  waves-light entries-btn\"\n      title=\"Add entry\"\n      style={{\n        width: \"9%\",\n        backgroundColor: \"#4aa69b\",\n      }}\n    >\n      <i className=\"material-icons right\">add</i>\n    </Link>\n  ) : null;\n\n  // Button conditional rendering\n  const editButton = canEdit ? (\n    <Link\n      to={\"/diary/\" + diary.id + \"/edit\"}\n      title=\"edit\"\n      style={{ color: \"#4aa69b\", margin: \"0 0.5rem\" }}\n      className=\"secondary-content\"\n    >\n      <i style={{ color: \"#424242\" }} className=\"material-icons edit-icon\">\n        create\n      </i>\n    </Link>\n  ) : null;\n\n  // Button conditional rendering\n  const deleteButton = canEdit ? (\n    <a\n      onClick={handleDelete}\n      title=\"delete\"\n      style={{ color: \"#4aa69b\" }}\n      className=\"secondary-content\"\n    >\n      <i style={{ color: \"#424242\" }} className=\"material-icons edit-icon\">\n        delete\n      </i>\n    </a>\n  ) : null;\n\n  return (\n    <div className=\"card hoverable z-depth-2 diary-summary\">\n      <div className=\"card-content grey-text text-darken-3\">\n        <div className=\"card-title\">\n          {title}\n          <a\n            title={type === \"private\" ? \"private\" : \"public\"}\n            className=\"secondary-content\"\n          >\n            <i\n              style={{ color: \"#424242\", cursor: \"default\" }}\n              className=\"material-icons\"\n            >\n              {type === \"private\" ? \"lock\" : \"lock_open\"}\n            </i>\n          </a>\n          {editButton}\n          {deleteButton}\n        </div>\n\n        <span\n          className=\"new badge\"\n          data-badge-caption={\n            totalEntries > 1 ? \"saved entries\" : \"saved entry\"\n          }\n        >\n          {totalEntries}\n        </span>\n\n        <p>\n          Posted by <span className=\"pink-text\">{userName}</span>\n        </p>\n\n        <p className=\"grey-text\">\n          {moment(diary.createdAt.toDate()).calendar()}\n        </p>\n        <div className=\"right-align\">\n          {totalEntries > 0 ? (\n            <Link\n              to={\"/diary/\" + diary.id}\n              className=\"btn btn-small waves-effect  waves-light entries-btn\"\n              title=\"View entries\"\n              style={{\n                width: \"50px\",\n                backgroundColor: \"#4aa69b\",\n              }}\n            >\n              <i className=\"material-icons\">send</i>\n            </Link>\n          ) : (\n            addButton\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\n// Map State to props\nconst mapStateToProps = (state) => {\n  return {\n    userProfile: state.firebase.profile,\n  };\n};\n\n// Map Dispatch to props\nconst mapDispatchToProps = (dispatch) => {\n  // Attach these to props\n  return {\n    // Take diary and pass to updateDiary action creator\n    updateDiary: (diary) => dispatch(updateDiary(diary)),\n    deleteDiary: (diary) => dispatch(deleteDiary(diary)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DiarySummary);\n","import React from \"react\";\nimport DiarySummary from \"./DiarySummary\";\nimport { Link } from \"react-router-dom\";\nimport { setShowOtherDiaries } from \"./../../store/actions/dataActions\";\nimport { connect } from \"react-redux\";\nconst DiariesList = ({ diaries, authorId, data, setShowOtherDiaries }) => {\n  console.log(\"showOtherDiaries\", data.showOtherDiaries);\n  // Checkbox\n  let checkbox;\n  data.showOtherDiaries\n    ? (checkbox = (\n        <input\n          id=\"switch\"\n          type=\"checkbox\"\n          onChange={(e) => {\n            setShowOtherDiaries(!data.showOtherDiaries);\n          }}\n        />\n      ))\n    : (checkbox = (\n        <input\n          id=\"switch\"\n          type=\"checkbox\"\n          onChange={(e) => {\n            setShowOtherDiaries(!data.showOtherDiaries);\n          }}\n          defaultChecked\n        />\n      ));\n\n  return (\n    <div className=\"project-list section\">\n      <h4\n        className=\"card-title\"\n        style={{ color: \"#424242\", textShadow: \"2px 2px 2px #776a6a\" }}\n      >\n        Diaries\n        <span class=\"switch secondary-content\">\n          <label htmlFor=\"switch\">\n            <span\n              style={{\n                fontSize: \"1.3rem\",\n                color: \"brown\",\n                textShadow: \"1px 1px 1px gray\",\n              }}\n            >\n              My Diaries Only\n            </span>\n            {checkbox}\n            <span class=\"lever\"></span>\n          </label>\n        </span>\n      </h4>\n\n      <div className=\"divider\"></div>\n\n      {diaries &&\n        diaries.map((diary) => {\n          // Show Private diaries to that user only\n          if (diary.type === \"private\") {\n            if (diary.authorId === authorId) {\n              return (\n                <DiarySummary\n                  key={diary.id}\n                  diary={diary}\n                  authorId={authorId}\n                  canEdit={true}\n                />\n              );\n            }\n          } else if (diary.type === \"public\") {\n            // If user is authenticated, He can edit\n            if (diary.authorId === authorId) {\n              return (\n                <DiarySummary key={diary.id} diary={diary} canEdit={true} />\n              );\n            } else {\n              if (data.showOtherDiaries) {\n                return (\n                  <DiarySummary key={diary.id} diary={diary} canEdit={false} />\n                );\n              }\n            }\n          }\n        })}\n      <div className=\"fixed-action-btn\">\n        <Link\n          title=\"create new diary\"\n          className=\"btn-floating btn-large  waves-effect hoverable waves-light green\"\n          to=\"/create\"\n        >\n          <i className=\"material-icons\">add</i>\n        </Link>\n      </div>\n    </div>\n  );\n};\n\n// Map State to props\nconst mapStateToProps = (state) => {\n  return {\n    data: state.data,\n  };\n};\n\n// Map Dispatch to props\nconst mapDispatchToProps = (dispatch) => {\n  // Attach these to props\n  return {\n    setShowOtherDiaries: (value) => dispatch(setShowOtherDiaries(value)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DiariesList);\n","// SignOut\nexport const setShowOtherDiaries = (value) => {\n  return (dispatch, getState) => {\n    dispatch({ type: \"UDPATE_SHOW_DIARIES\", value });\n  };\n};\n","import React from \"react\";\nimport moment from \"moment\";\nimport { connect } from \"react-redux\";\n\nconst Notifications = ({ notifications, userProfile }) => {\n  return (\n    <div className=\"section\">\n      <h4\n        className=\"card-title\"\n        style={{ color: \"#424242\", textShadow: \"2px 2px 2px #776a6a\" }}\n      >\n        Notifications\n      </h4>\n      <div className=\"divider\"></div>\n      <div className=\"card z-depth-0\">\n        <div className=\"card-content\">\n          <ul className=\"notifications\">\n            {notifications &&\n              notifications.map((notification) => {\n                const id = notification.id;\n                let user = notification.user;\n                const content = notification.content;\n                const time = notification.time;\n\n                if (\n                  user === `${userProfile.firstName} ${userProfile.lastName}`\n                ) {\n                  user = \"You\";\n                }\n\n                // Return\n                return (\n                  <li key={id}>\n                    <span className=\"pink-text\">{user} </span>\n                    <span>{content}</span>\n                    <div className=\"grey-text note-date\">\n                      {moment(time.toDate()).fromNow()}\n                    </div>\n                  </li>\n                );\n              })}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\n// Map State to props\nconst mapStateToProps = (state) => {\n  return {\n    userProfile: state.firebase.profile,\n  };\n};\n\nexport default connect(mapStateToProps)(Notifications);\n","import React, { Component } from \"react\";\nimport DiariesList from \"./../diaries/DiariesList\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\nimport { BeatLoader } from \"react-spinners\";\nimport { Redirect } from \"react-router-dom\";\nimport Notifications from \"./Notifications\";\nimport \"./dashboard.css\";\n\n// Dashboard\nclass Dashboard extends Component {\n  render() {\n    const { diaries, auth, notifications, data } = this.props;\n    console.log(\"data\", data);\n    if (!auth.uid) return <Redirect to=\"/signin\" />;\n\n    // Return Dashboard\n    if (diaries) {\n      return (\n        <div\n          style={{\n            padding: \"0 4rem\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            minWidth: \"500px\",\n            minHeight: \"100vh\",\n          }}\n          className=\"dashboard container\"\n        >\n          <div className=\"row\">\n            <div className=\"col s12 l6 \">\n              <DiariesList diaries={diaries} authorId={auth.uid} />\n            </div>\n            <div className=\"col s12 l4 offset-l1\">\n              <Notifications notifications={notifications} />\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <div\n        style={{\n          width: \"100%\",\n          height: \"100%\",\n          minHeight: \"90vh\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <BeatLoader loading />\n      </div>\n    );\n  }\n}\n\n// Map State to props\nconst mapStateToProps = (state) => {\n  return {\n    notifications: state.firestore.ordered.notifications,\n    diaries: state.firestore.ordered.diaries,\n    entries: state.firestore.ordered.entries,\n    auth: state.firebase.auth,\n    data: state.data,\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    { collection: \"diaries\", orderBy: [\"createdAt\", \"desc\"] }, // Collection diaries\n    { collection: \"notifications\", limit: 3, orderBy: [\"time\", \"desc\"] }, // Connect to notifications collection\n  ])\n)(Dashboard);\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { signOut } from \"./../../store/actions/authActions\";\nimport { connect } from \"react-redux\";\n\n// Navbar\nconst SignedInLinks = (props) => {\n  return (\n    <ul className=\"right\">\n      <li>\n        <a onClick={() => props.signOut()}>Log Out</a>\n      </li>\n      <li>\n        <NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">\n          {props.profile.initials}\n        </NavLink>\n      </li>\n    </ul>\n  );\n};\n\n// Map Dispatch\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signOut: () => dispatch(signOut()),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(SignedInLinks);\n","import { createNotification } from \"./functions/functions\";\nimport Swal from \"sweetalert2\";\n\n// SignIn\nexport const signIn = (credentials) => {\n  return (dispatch, getState, { getFirebase }) => {\n    // Initialize firebase\n    const firebase = getFirebase();\n\n    // Sign In user\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(\n        // Email and pwd\n        credentials.email,\n        credentials.password\n      )\n      .then(() => {\n        // Login success\n        dispatch({ type: \"LOGIN_SUCCESS\" });\n        // Alert Success\n        // Show alert\n        Swal.fire({\n          icon: \"success\",\n          title: \"Login Success!\",\n          showConfirmButton: false,\n          timer: 1500,\n        }).then(() => {\n          // Logic\n        });\n      })\n      .catch((err) => {\n        // Identify the error\n        if (err.code === \"auth/wrong-password\") {\n          // Set error to wrong-password\n          // Fire the alert\n          Swal.fire({\n            icon: \"error\",\n            title: \"Password is incorrect !\",\n            showConfirmButton: false,\n            timer: 1500,\n          }).then(() => {\n            // Empty the form\n            window.location.reload(false);\n          });\n        } else if (err.code === \"auth/user-not-found\") {\n          // Fire the alert\n          Swal.fire({\n            icon: \"error\",\n            title: \"User not found !\",\n            showConfirmButton: false,\n            timer: 1500,\n          }).then(() => {\n            // Empty the form\n            window.location.reload(false);\n          });\n        } else if (err.code === \"auth/too-many-requests\") {\n          // Fire the alert\n          Swal.fire({\n            icon: \"error\",\n            title: \"Too many failed login attempts, please try again later !\",\n            showConfirmButton: false,\n            timer: 1500,\n          }).then(() => {\n            // Empty the form\n            window.location.reload(false);\n          });\n        }\n\n        // Login Error\n        dispatch({ type: \"LOGIN_ERROR\", err });\n      });\n  };\n};\n\n// SignOut\nexport const signOut = () => {\n  return (dispatch, getState, { getFirebase }) => {\n    // Sign Out\n    const firebase = getFirebase();\n\n    firebase\n      .auth()\n      .signOut()\n      .then(() => {\n        // Fire the alert\n        Swal.fire({\n          icon: \"success\",\n          title: \"Signed Out !\",\n          showConfirmButton: false,\n          timer: 1000,\n        }).then(() => {\n          // Logic\n        });\n        // Sign Out Success\n        dispatch({ type: \"SIGNOUT_SUCCESS\" });\n      });\n  };\n};\n\n// SignUp\nexport const signUp = (newUser) => {\n  return (dispatch, getState, { getFirebase }) => {\n    // Initialize firebase and firestore\n    const firebase = getFirebase();\n    const db = firebase.firestore();\n\n    // SignUp user\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(newUser.email, newUser.password)\n      .then((resp) => {\n        // Create user in users collection with ID as user's id\n        return db\n          .collection(\"users\")\n          .doc(resp.user.uid)\n          .set({\n            firstName: newUser.firstName,\n            lastName: newUser.lastName,\n            initials: newUser.firstName[0] + newUser.lastName[0],\n          });\n        // returns Promise\n      })\n      .then(() => {\n        // SignUp Success\n        dispatch({ type: \"SIGNUP_SUCCESS\" });\n\n        // Alert Success\n        Swal.fire({\n          icon: \"success\",\n          title: \"Signup Success!\",\n          showConfirmButton: false,\n          timer: 1500,\n        }).then(() => {\n          // Logic\n        });\n\n        // Add Notification for user joined\n        const notification = {\n          content: \"Joined the party\",\n          user: `${newUser.firstName} ${newUser.lastName}`,\n          time: new Date(),\n        };\n\n        createNotification(db, notification, dispatch);\n      })\n      .catch((err) => {\n        // Identify the error\n        if (err.code === \"auth/weak-password\") {\n          // Set error to auth/weak-password\n          // Fire the alert\n          Swal.fire({\n            icon: \"error\",\n            title: \"Weak Password !\",\n            text: \"Password should be at least 6 characters\",\n            showConfirmButton: false,\n            timer: 1500,\n          }).then(() => {\n            // Logic\n          });\n        } else if (err.code === \"auth/email-already-in-use\") {\n          // Fire the alert\n          Swal.fire({\n            icon: \"error\",\n            title: \"Account Already Exists !\",\n            text: \"Email address is already in use by another account\",\n            showConfirmButton: false,\n            timer: 2500,\n          }).then(() => {\n            // Logic\n          });\n        }\n\n        // SignUp Error\n        dispatch({ type: \"SIGNUP_ERROR\", err });\n      });\n  };\n};\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\n// Navbar\nconst SignedOutLinks = (props) => {\n  return (\n    <ul className=\"right\">\n      <li>\n        <NavLink to=\"/signup\">Signup</NavLink>\n      </li>\n      <li>\n        <NavLink to=\"/signin\">Login</NavLink>\n      </li>\n    </ul>\n  );\n};\n\nexport default SignedOutLinks;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport SignedInLinks from \"./SignedInLinks\";\nimport SignedOutLinks from \"./SignedOutLinks\";\nimport { connect } from \"react-redux\";\n\n// Navbar\nconst Navbar = (props) => {\n  const { auth, profile } = props;\n  const links = auth.uid ? (\n    <SignedInLinks profile={profile} />\n  ) : (\n    <SignedOutLinks />\n  );\n  return (\n    <nav className=\"nav-wrapper grey darken-3\">\n      <div className=\"container\">\n        <Link to=\"/\" className=\"brand-logo left\" style={{ marginLeft: \"1rem\" }}>\n          Diaries App\n        </Link>\n        {links}\n      </div>\n    </nav>\n  );\n};\n\n// Map state to props\nconst mapStateToProps = (state) => {\n  return {\n    // Things you want to attach to props\n    auth: state.firebase.auth,\n    profile: state.firebase.profile,\n  };\n};\n\nexport default connect(mapStateToProps)(Navbar);\n","import Swal from \"sweetalert2\";\n\n// Create Entry Action\nexport const createEntry = (entry) => {\n  return (dispatch, getState, { getFirebase }) => {\n    // Make Async call to database\n\n    // Initialize Firestore Database\n    const db = getFirebase().firestore();\n\n    // Add Entry to collection\n    db.collection(\"entries\")\n      .add({\n        // Id = auto\n        ...entry, // Title, Content, and DiaryId\n        createdAt: new Date(), // CreatedAt\n      })\n      .then((resp) => {\n        // When Entry is added\n        let entryId = resp.id;\n        let diaryId = entry.diaryId;\n\n        // Push Entry Id to Diary\n        db.collection(\"diaries\")\n          .doc(entry.diaryId)\n          .get()\n          .then((snapshot) => {\n            let entryIds = snapshot.data().entryIds;\n            entryIds.push(entryId);\n            // Push to diary entryIds\n            db.collection(\"diaries\")\n              .doc(diaryId)\n              .update({ entryIds: entryIds });\n          });\n\n        // Then dispatch an action\n        dispatch({ type: \"CREATE_ENTRY\", entry });\n      })\n      .catch((err) => {\n        // If anything goes wrong\n        dispatch({ type: \"CREATE_ENTRY_ERROR\", err });\n      });\n  };\n};\n\n// Update Entry Action\nexport const updateEntry = (entry) => {\n  return (dispatch, getState, { getFirebase }) => {\n    // Make Async call to database\n    // Initialize db\n    const db = getFirebase().firestore();\n\n    const collection = \"entries\";\n    const id = entry.entryId;\n    const newTitle = entry.title;\n    const newContent = entry.content;\n\n    // update entry\n    const entryToUpdate = db.collection(collection).doc(id);\n\n    entryToUpdate\n      .update({\n        title: newTitle,\n        content: newContent,\n      })\n      .then(() => {\n        // Entry Updated\n        // Then dispatch an action\n        dispatch({ type: \"UPDATE_ENTRY\", entry });\n      })\n      .catch((err) => {\n        // If anything goes wrong\n        dispatch({ type: \"UPDATE_ENTRY_ERROR\", err });\n      });\n  };\n};\n\n// Delete Entry Action\nexport const deleteEntry = (entry) => {\n  return (dispatch, getState, { getFirebase }) => {\n    // Make Async call to database\n    // Initialize Firestore Database\n    const db = getFirebase().firestore();\n    const diaryId = entry.diaryId;\n    const entryToDelete = entry.id;\n    const diary = db.collection(\"diaries\").doc(diaryId);\n\n    diary.get().then((snapshot) => {\n      let entryIds = snapshot.data().entryIds;\n      const result = entryIds.filter((entryId) => entryId !== entryToDelete);\n      // Push to diary entryIds\n      db.collection(\"diaries\")\n        .doc(diaryId)\n        .update({ entryIds: result })\n        .then(() => {\n          // Delete entry\n\n          // Delete doc\n          db.collection(\"entries\")\n            .doc(entry.id)\n            .delete()\n            .then(() => {\n              // Entry Deleted\n              // Then dispatch an action\n              dispatch({ type: \"DELETE_ENTRY\", entry });\n              Swal.fire(\"Deleted!\", \"Entry has been deleted.\", \"success\").then(\n                () => {\n                  // logic\n                }\n              );\n            })\n            .catch((err) => {\n              // Entry delete error\n              dispatch({ type: \"DELETE_ENTRY_ERROR\", err });\n            });\n        });\n    });\n  };\n};\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { updateEntry } from \"../../store/actions/entryActions\";\nimport { deleteEntry } from \"../../store/actions/entryActions\";\nimport { useHistory } from \"react-router-dom\";\nimport moment from \"moment\";\n\nconst EntrySummary = (props) => {\n  const title = props.entry.title;\n  const content = props.entry.content;\n  const createdAt = props.entry.createdAt;\n  const history = useHistory();\n\n  // Handle Clicks\n  const handleEditClick = () => {\n    history.push(`/diary/${props.diaryId}/${props.entry.id}/edit`);\n  };\n\n  const handleDelete = () => {\n    // Logic\n    props.deleteEntry(props.entry);\n  };\n\n  const handleViewClick = () => {\n    history.push(`/diary/${props.diaryId}/${props.entry.id}`);\n  };\n\n  let editButton = props.isAuthenticated ? (\n    <a onClick={handleEditClick} title=\"edit\" className=\"secondary-content\">\n      <i style={{ color: \"#424242\" }} className=\"material-icons edit-icon\">\n        create\n      </i>\n    </a>\n  ) : null;\n\n  let deleteButton = props.isAuthenticated ? (\n    <a\n      onClick={handleDelete}\n      title=\"delete\"\n      style={{ margin: \"0 1rem\" }}\n      className=\"secondary-content\"\n    >\n      <i style={{ color: \"#424242\" }} className=\"material-icons edit-icon\">\n        delete\n      </i>\n    </a>\n  ) : null;\n\n  return (\n    <div className=\"card hoverable z-depth-2 entry-summary\">\n      <div className=\"card-content grey-text text-darken-3\">\n        <div className=\"card-title\">\n          {title}\n\n          {deleteButton}\n          {editButton}\n          <a\n            onClick={handleViewClick}\n            style={{ margin: \"0 1rem\" }}\n            title=\"view\"\n            className=\"secondary-content\"\n          >\n            <i\n              style={{ color: \"#424242\" }}\n              className=\"material-icons edit-icon\"\n            >\n              visibility\n            </i>\n          </a>\n        </div>\n\n        <p className=\"truncate\">{content}</p>\n\n        <p className=\"grey-text\">{moment(createdAt.toDate()).calendar()}</p>\n      </div>\n    </div>\n  );\n};\n\n// Map Dispatch to props\nconst mapDispatchToProps = (dispatch) => {\n  // Attach these to props\n  return {\n    // Take diary and pass to updateDiary action creator\n    updateEntry: (entry) => dispatch(updateEntry(entry)),\n    deleteEntry: (entry) => dispatch(deleteEntry(entry)),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(EntrySummary);\n","import React, { useState, useEffect } from \"react\";\nimport EntrySummary from \"./EntrySummary\";\nimport { Link } from \"react-router-dom\";\nimport { BeatLoader } from \"react-spinners\";\nimport { Redirect } from \"react-router-dom\";\n\nconst EntriesList = ({ id, entries, diaryName, showButton }) => {\n  // handle loading state\n  const [isLoading, setIsLoading] = useState(true);\n  let button = showButton ? (\n    <Link\n      title=\"create new entry\"\n      className=\"btn-floating btn-large  waves-effect hoverable waves-light green\"\n      to={`/diary/${id}/create`}\n    >\n      <i className=\"material-icons\">add</i>\n    </Link>\n  ) : null;\n\n  useEffect(() => {\n    // If entries are there make loader false\n    if (entries.length) {\n      setIsLoading(false);\n    } else {\n      setIsLoading(true);\n    }\n  }, [entries]);\n\n  if (isLoading) {\n    return (\n      <div\n        style={{\n          width: \"100%\",\n          height: \"100%\",\n          minHeight: \"90vh\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <BeatLoader loading />\n      </div>\n    );\n  } else {\n    // Redirect\n    if (entries.length < 1) return <Redirect to=\"/\" />;\n    return (\n      <div className=\"project-list section\">\n        <h4 className=\"card-title\" style={{ color: \"#424242\" }}>\n          {diaryName}\n        </h4>\n        <div className=\"divider\"></div>\n\n        {entries &&\n          entries.map((entry) => (\n            <EntrySummary\n              diaryId={id}\n              key={entry.id}\n              isAuthenticated={showButton}\n              entry={entry}\n            />\n          ))}\n        <div className=\"fixed-action-btn\">{button}</div>\n      </div>\n    );\n  }\n};\n\nexport default EntriesList;\n","import React, { useEffect, useState } from \"react\";\nimport EntriesList from \"./../entries/EntriesList\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\nimport { getFirebase } from \"react-redux-firebase\";\nimport { Redirect } from \"react-router-dom\";\n\n//Project Details\nconst DiaryDetails = (props) => {\n  const id = props.match.params.id; // Get diary ID\n  const { entries, auth } = props;\n  let authorId = auth.uid;\n  let entriesToShow = [];\n  let [diaryName, setDiaryName] = useState(\"\");\n  let [showButton, setShowButton] = useState(false);\n\n  // Get DiaryName from firebase\n  const db = getFirebase().firestore();\n\n  // Find Entries\n  const findEntries = (entry) => {\n    return entry.diaryId === id;\n  };\n\n  useEffect(() => {\n    // Get DiaryName\n    db.collection(\"diaries\")\n      .doc(id)\n      .get()\n      .then((snapshot) => {\n        setDiaryName(snapshot.data().title);\n        if (snapshot.data().authorId === authorId) {\n          setShowButton(true);\n        }\n      })\n      .catch((err) => {\n        // No Data\n      });\n\n    if (entries) {\n      if (entries.find(findEntries)) {\n      } else {\n        // Redirect to dashboard\n        // history.push(\"/\");\n      }\n    }\n  }, [entries]);\n\n  entries &&\n    entries.map((entry) => {\n      if (id === entry.diaryId) {\n        entriesToShow.push(entry);\n      }\n    });\n\n  // Redirect\n  if (!auth.uid) return <Redirect to=\"/signin\" />;\n\n  return (\n    <div className=\"dashboard container\">\n      <div className=\"row\">\n        <div className=\"col s12 l10\">\n          {entriesToShow && (\n            <EntriesList\n              id={id}\n              entries={entriesToShow}\n              diaryName={diaryName}\n              showButton={showButton}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\n// Map State to props\nconst mapStateToProps = (state) => {\n  return {\n    entries: state.firestore.ordered.entries,\n    auth: state.firebase.auth,\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    { collection: \"entries\" }, // Collection entries\n  ])\n)(DiaryDetails);\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\nimport { BeatLoader } from \"react-spinners\";\nimport moment from \"moment\";\n\nfunction EntryDetails(props) {\n  // handle loading state\n  const [isLoading, setIsLoading] = useState(true);\n  const { entries } = props;\n  let entryTitle = \"\";\n  let entryContent = \"\";\n  let entryCreatedAt;\n\n  // Split url to get id's (2 = diaryId) (3=entryId)\n  const urlArray = props.match.url.split(\"/\");\n  const diaryId = urlArray[2];\n  const entryId = urlArray[3];\n\n  entries &&\n    entries.map((entry) => {\n      if (entry.id === entryId) {\n        entryTitle = entry.title;\n        entryContent = entry.content;\n        entryCreatedAt = entry.createdAt;\n      }\n    });\n\n  useEffect(() => {\n    // If entries are there make loader false\n    if (entries) {\n      setIsLoading(false);\n    } else {\n      setIsLoading(true);\n    }\n  }, [entries]);\n\n  if (isLoading) {\n    return (\n      <div\n        style={{\n          width: \"100%\",\n          height: \"100%\",\n          minHeight: \"90vh\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <BeatLoader loading />\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"container section entry-details\">\n        <div className=\"card z-depth-0\">\n          <div className=\"card-content\">\n            <span className=\"card-title\">{entryTitle}</span>\n            <pre style={{ width: \"100%\", overflow: \"auto\" }}>\n              {entryContent}\n            </pre>\n          </div>\n          <div className=\"card-action grey lighten-4 grey-text\">\n            <div>{moment(entryCreatedAt.toDate()).calendar()}</div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n// Map State to props\nconst mapStateToProps = (state) => {\n  return {\n    entries: state.firestore.ordered.entries,\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    { collection: \"entries\" }, // Collection entries\n  ])\n)(EntryDetails);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { signIn } from \"./../../store/actions/authActions\";\nimport { Redirect } from \"react-router-dom\";\n\n// SignIn Class Component\nclass SignIn extends Component {\n  // State\n  state = {\n    email: \"\",\n    password: \"\",\n  };\n\n  // Functions\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value,\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    // Sign User In\n    this.props.signIn(this.state);\n  };\n\n  // Render\n  render() {\n    const { auth } = this.props;\n    if (auth.uid) return <Redirect to=\"/\" />;\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmit} className=\"white\">\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input\n              type=\"email\"\n              required\n              id=\"email\"\n              onChange={this.handleChange}\n            />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input\n              type=\"password\"\n              required\n              id=\"password\"\n              onChange={this.handleChange}\n            />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\n// Map State\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth,\n  };\n};\n\n// Map Dispatch\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signIn: (creds) => dispatch(signIn(creds)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\n","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { signUp } from \"../../store/actions/authActions\";\n\n// SignIn Class Component\nclass SignUp extends Component {\n  // State\n  state = {\n    email: \"\",\n    password: \"\",\n    firstName: \"\",\n    lastName: \"\",\n  };\n\n  // Functions\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value,\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    // Sign User Up\n    this.props.signUp(this.state);\n  };\n\n  // Render\n  render() {\n    const { auth } = this.props;\n    if (auth.uid) return <Redirect to=\"/\" />;\n\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmit} className=\"white\">\n          <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input\n              type=\"email\"\n              required\n              id=\"email\"\n              onChange={this.handleChange}\n            />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input\n              type=\"password\"\n              required\n              id=\"password\"\n              onChange={this.handleChange}\n            />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"firstName\">First Name</label>\n            <input\n              type=\"text\"\n              required\n              id=\"firstName\"\n              onChange={this.handleChange}\n            />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"lastName\">Last Name</label>\n            <input\n              type=\"text\"\n              required\n              id=\"lastName\"\n              onChange={this.handleChange}\n            />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\n// Map State\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth,\n  };\n};\n\n// Map Dispatch\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signUp: (newUser) => dispatch(signUp(newUser)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\n","import React, { useState } from \"react\";\nimport { createDiary } from \"../../store/actions/diaryActions\";\nimport { connect } from \"react-redux\";\nimport Swal from \"sweetalert2\";\nimport { Redirect, useHistory } from \"react-router-dom\";\n\n// SignIn Class Component\nconst CreateDiary = (props) => {\n  const history = useHistory();\n\n  // State\n  const [state, setState] = useState({\n    title: \"\",\n    type: \"public\",\n    entryIds: [],\n  });\n\n  // Redirect\n  if (!props.auth.uid) return <Redirect to=\"/signin\" />;\n\n  // Functions\n  const handleChange = (e) => {\n    setState({\n      ...state,\n      [e.target.id]: e.target.value,\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // Create diary\n    props.createDiary(state);\n    // Show alert\n    Swal.fire({\n      icon: \"success\",\n      title: \"Diary Created!\",\n      showConfirmButton: false,\n      timer: 1500,\n    }).then(() => {\n      // Redirect to dashboard\n      history.push(\"/\");\n    });\n  };\n\n  // Render\n  return (\n    <div className=\"container\">\n      <form onSubmit={handleSubmit} className=\"white\">\n        <h5 className=\"grey-text text-darken-3\">Create new diary</h5>\n        <div className=\"input-field\">\n          <label htmlFor=\"title\">Title</label>\n          <input required type=\"text\" id=\"title\" onChange={handleChange} />\n        </div>\n        Type:\n        <p>\n          <label>\n            <input\n              className=\"with-gap\"\n              name=\"type\"\n              type=\"radio\"\n              id=\"type\"\n              required\n              defaultChecked\n              value=\"public\"\n              onChange={handleChange}\n            />\n            <span>Public</span>\n          </label>\n        </p>\n        <p>\n          <label>\n            <input\n              className=\"with-gap\"\n              name=\"type\"\n              id=\"type\"\n              required\n              type=\"radio\"\n              value=\"private\"\n              onChange={handleChange}\n            />\n            <span>Private</span>\n          </label>\n        </p>\n        <div className=\"input-field\">\n          <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\n// Map state\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth,\n  };\n};\n\n// Map Dispatch to props\nconst mapDispatchToProps = (dispatch) => {\n  // Attach these to props\n  return {\n    // Take diary and pass to createDiary action creator\n    createDiary: (diary) => dispatch(createDiary(diary)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateDiary);\n","import React, { useState } from \"react\";\nimport Swal from \"sweetalert2\";\nimport { useHistory } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { createEntry } from \"../../store/actions/entryActions\";\n\n// SignIn Class Component\nconst CreateEntry = (props) => {\n  const history = useHistory();\n  const diaryId = props.match.params.id;\n\n  // State\n  const [state, setState] = useState({\n    title: \"\",\n    content: \"\",\n    diaryId: diaryId,\n  });\n\n  // Functions\n  const handleChange = (e) => {\n    setState({\n      ...state,\n      [e.target.id]: e.target.value,\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // Create entry\n    props.createEntry(state);\n    // Show alert\n    Swal.fire({\n      icon: \"success\",\n      title: \"Entry Created!\",\n      showConfirmButton: false,\n      timer: 1500,\n    }).then(() => {\n      // Redirect to dashboard\n      history.push(`/diary/${diaryId}`);\n    });\n  };\n\n  // Render\n  return (\n    <div className=\"container\">\n      <form onSubmit={handleSubmit} className=\"white\">\n        <h5 className=\"grey-text text-darken-3\">Create new entry</h5>\n        <div className=\"input-field\">\n          <label htmlFor=\"title\">Title</label>\n          <input required type=\"text\" id=\"title\" onChange={handleChange} />\n        </div>\n        <div className=\"input-field\">\n          <label htmlFor=\"content\">Entry Content</label>\n          <textarea\n            id=\"content\"\n            onChange={handleChange}\n            className=\"materialize-textarea\"\n          ></textarea>\n        </div>\n\n        <div className=\"input-field\">\n          <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\n// Map Dispatch to props\nconst mapDispatchToProps = (dispatch) => {\n  // Attach these to props\n  return {\n    // Take entry and pass to createEntry action creator\n    createEntry: (entry) => dispatch(createEntry(entry)),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(CreateEntry);\n","import React, { useState } from \"react\";\nimport Swal from \"sweetalert2\";\nimport { useHistory } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { updateEntry } from \"../../store/actions/entryActions\";\nimport { compose } from \"redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\n\n// SignIn Class Component\nconst EditEntry = (props) => {\n  const history = useHistory();\n\n  // Split url to get id's (2 = diaryId) (3=entryId)\n  const urlArray = props.match.url.split(\"/\");\n  const diaryId = urlArray[2];\n  const entryId = urlArray[3];\n  let entryTitle = \"\";\n  let entryContent = \"\";\n\n  props.entries &&\n    props.entries.map((entry) => {\n      if (entry.diaryId === diaryId) {\n        if (entryId === entry.id) {\n          entryTitle = entry.title;\n          entryContent = entry.content;\n        }\n      }\n    });\n\n  // State\n  const [state, setState] = useState({\n    entryId: entryId,\n    title: entryTitle,\n    content: entryContent,\n  });\n\n  // Functions\n  const handleChange = (e) => {\n    setState({\n      ...state,\n      [e.target.id]: e.target.value,\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // Create entry\n    props.updateEntry(state);\n    // Show alert\n    Swal.fire({\n      icon: \"success\",\n      title: \"Entry updated!\",\n      showConfirmButton: false,\n      timer: 1500,\n    }).then(() => {\n      // Redirect to dashboard\n      history.push(`/diary/${diaryId}`);\n    });\n  };\n\n  // Render\n  return (\n    <div className=\"container\">\n      <form onSubmit={handleSubmit} className=\"white\">\n        <h5 className=\"grey-text text-darken-3\">Edit entry</h5>\n        <div className=\"input-field\">\n          <label htmlFor=\"title\"></label>\n          <input\n            required\n            defaultValue={entryTitle}\n            type=\"text\"\n            id=\"title\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"input-field\">\n          <label htmlFor=\"content\"></label>\n          <textarea\n            id=\"content\"\n            onChange={handleChange}\n            defaultValue={entryContent}\n            className=\"materialize-textarea\"\n          ></textarea>\n        </div>\n\n        <div className=\"input-field\">\n          <button className=\"btn pink lighten-1 z-depth-0\">Confirm</button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\n// Map State to props\nconst mapStateToProps = (state) => {\n  return {\n    entries: state.firestore.ordered.entries,\n  };\n};\n\n// Map Dispatch to props\nconst mapDispatchToProps = (dispatch) => {\n  // Attach these to props\n  return {\n    // Take entry and pass to updateEntry action creator\n    updateEntry: (entry) => dispatch(updateEntry(entry)),\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  firestoreConnect([\n    { collection: \"entries\" }, // Collection entries\n  ])\n)(EditEntry);\n","import React, { useState } from \"react\";\nimport { updateDiary } from \"../../store/actions/diaryActions\";\nimport { connect } from \"react-redux\";\nimport Swal from \"sweetalert2\";\nimport { useHistory } from \"react-router-dom\";\nimport { compose } from \"redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\n\n// EditDiary  Component\nconst EditDiary = (props) => {\n  const history = useHistory();\n  const urlArray = props.match.url.split(\"/\");\n  const diaryId = urlArray[2];\n  let diaryTitle = \"\";\n  let diaryType = \"\";\n\n  // Map\n  props.diaries.map((diary) => {\n    if (diary.id === diaryId) {\n      diaryTitle = diary.title;\n      diaryType = diary.type;\n    }\n  });\n\n  // State\n  const [state, setState] = useState({\n    diaryId: diaryId,\n    title: diaryTitle,\n    type: diaryType,\n    entryIds: [],\n  });\n\n  // Functions\n  const handleChange = (e) => {\n    setState({\n      ...state,\n      [e.target.id]: e.target.value,\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // Create diary\n    props.updateDiary(state);\n    // Show alert\n    Swal.fire({\n      icon: \"success\",\n      title: \"Diary Updated!\",\n      showConfirmButton: false,\n      timer: 1500,\n    }).then(() => {\n      // Redirect to dashboard\n      history.push(\"/\");\n    });\n  };\n\n  // Render\n  return (\n    <div className=\"container\">\n      <form onSubmit={handleSubmit} className=\"white\">\n        <h5 className=\"grey-text text-darken-3\">Edit Diary</h5>\n        <div className=\"input-field\">\n          <label htmlFor=\"title\"></label>\n          <input\n            required\n            defaultValue={diaryTitle}\n            type=\"text\"\n            id=\"title\"\n            onChange={handleChange}\n          />\n        </div>\n        Type:\n        {diaryType === \"public\" ? (\n          <>\n            <p>\n              <label>\n                <input\n                  className=\"with-gap\"\n                  name=\"type\"\n                  type=\"radio\"\n                  id=\"type\"\n                  required\n                  defaultChecked\n                  value=\"public\"\n                  onChange={handleChange}\n                />\n                <span>Public</span>\n              </label>\n            </p>\n            <p>\n              <label>\n                <input\n                  className=\"with-gap\"\n                  name=\"type\"\n                  id=\"type\"\n                  required\n                  type=\"radio\"\n                  value=\"private\"\n                  onChange={handleChange}\n                />\n                <span>Private</span>\n              </label>\n            </p>\n          </>\n        ) : (\n          <>\n            <p>\n              <label>\n                <input\n                  className=\"with-gap\"\n                  name=\"type\"\n                  type=\"radio\"\n                  id=\"type\"\n                  required\n                  value=\"public\"\n                  onChange={handleChange}\n                />\n                <span>Public</span>\n              </label>\n            </p>\n            <p>\n              <label>\n                <input\n                  className=\"with-gap\"\n                  name=\"type\"\n                  id=\"type\"\n                  required\n                  type=\"radio\"\n                  value=\"private\"\n                  defaultChecked\n                  onChange={handleChange}\n                />\n                <span>Private</span>\n              </label>\n            </p>\n          </>\n        )}\n        <div className=\"input-field\">\n          <button className=\"btn pink lighten-1 z-depth-0\">Confirm</button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\n// Map State to props\nconst mapStateToProps = (state) => {\n  return {\n    diaries: state.firestore.ordered.diaries,\n  };\n};\n\n// Map Dispatch to props\nconst mapDispatchToProps = (dispatch) => {\n  // Attach these to props\n  return {\n    // Take entry and pass to updateEntry action creator\n    updateDiary: (diary) => dispatch(updateDiary(diary)),\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  firestoreConnect([\n    { collection: \"dairies\" }, // Collection diaries\n  ])\n)(EditDiary);\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport Navbar from \"./components/layout/Navbar\";\nimport DiaryDetails from \"./components/diaries/DiaryDetails\";\nimport EntryDetails from \"./components/entries/EntryDetails\";\nimport SignIn from \"./components/auth/SignIn\";\nimport SignUp from \"./components/auth/SignUp\";\nimport CreateDiary from \"./components/diaries/CreateDiary\";\nimport CreateEntry from \"./components/entries/CreateEntry\";\nimport EditEntry from \"./components/entries/EditEntry\";\nimport EditDiary from \"./components/diaries/EditDiary\";\n// import Footer from \"./components/layout/Footer\";\n\nfunction App() {\n  return (\n    <Router>\n      <Navbar />\n      <Switch>\n        <Route exact path=\"/\" component={Dashboard} />\n        <Route exact path=\"/diary/:id\" component={DiaryDetails} />\n        <Route path=\"/signin\" component={SignIn} />\n        <Route path=\"/signup\" component={SignUp} />\n        <Route path=\"/create\" component={CreateDiary} />\n        <Route path=\"/diary/:id/create\" component={CreateEntry} />\n        <Route path=\"/diary/:id/edit\" component={EditDiary} />\n        <Route path=\"/diary/:id/:id/edit\" component={EditEntry} />\n        <Route path=\"/diary/:id/:id\" component={EntryDetails} />\n      </Switch>\n      <div style={{ height: \"150px\" }}></div>\n\n      {/* <Footer /> */}\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// Initial State\nconst initialState = {\n  authError: null,\n};\n\n// Auth Reducer\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"LOGIN_ERROR\":\n      return state;\n\n    case \"LOGIN_SUCCESS\":\n      return { ...state, authError: null };\n\n    case \"SIGNOUT_SUCCESS\":\n      return state;\n\n    case \"SIGNUP_SUCCESS\":\n      return {\n        ...state,\n        authError: null,\n      };\n\n    case \"SIGNUP_ERROR\":\n      return {\n        ...state,\n        authError: action.err.message, // Error Message\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","const initialState = {};\n\n// Entry Reducer\nconst entryReducer = (state = initialState, action) => {\n  // Take Actions\n  switch (action.type) {\n    // CREATE_ENTRY\n    case \"CREATE_ENTRY\":\n      return state;\n\n    // CREATE_ENTRY_ERROR\n    case \"CREATE_ENTRY_ERROR\":\n      return state;\n\n    //  UPDATE_ENTRY\n    case \"UPDATE_ENTRY\":\n      return state;\n\n    //  UPDATE_ENTRY_ERROR\n    case \"UPDATE_ENTRY_ERROR\":\n      return state;\n\n    //  DELETE_ENTRY\n    case \"DELETE_ENTRY\":\n      return state;\n\n    //  DELETE_ENTRY_ERROR\n    case \"DELETE_ENTRY_ERROR\":\n      return state;\n\n    default:\n      return state;\n  }\n};\n\nexport default entryReducer;\n","// Initial State\nconst initialState = {\n  diaries: [\n    {\n      id: \"1\",\n      title: \"Journey to Karachi\",\n      type: \"private\",\n      entries: [\n        {\n          id: \"1\",\n          title: \"Seaview\",\n          content: \"We enjoyed alot, on horses and cars and water\",\n        },\n        {\n          id: \"2\",\n          title: \"Dolmen Mall\",\n          content: \"We did shopping and eating\",\n        },\n      ],\n    },\n    {\n      id: \"2\",\n      title: \"Journey to Hyderabad\",\n      type: \"public\",\n      entries: [\n        {\n          id: \"1\",\n          title: \"Resham gali\",\n          content: \"We enjoyed alot, purchasing clothes\",\n        },\n      ],\n    },\n    {\n      id: \"3\",\n      title: \"Journey to Quetta\",\n      type: \"private\",\n      entries: [\n        {\n          id: \"1\",\n          title: \"Mountains\",\n          content: \"We enjoyed alot, on mountains\",\n        },\n        {\n          id: \"2\",\n          title: \"Pathan shop\",\n          content: \"We did seating\",\n        },\n        {\n          id: \"3\",\n          title: \"Snowfalls\",\n          content: \"We enjoyed alot\",\n        },\n      ],\n    },\n  ],\n};\n\n// Diary Reducer\nconst diaryReducer = (state = initialState, action) => {\n  // Take Actions\n  switch (action.type) {\n    // CREATE_DIARY\n    case \"CREATE_DIARY\":\n      return state;\n\n    // CREATE_DIARY_ERROR\n    case \"CREATE_DIARY_ERROR\":\n      return state;\n\n    // UPDATE DIARY\n    case \"UPDATE_DIARY\":\n      return state;\n\n    // UPDATE DIARY\n    case \"UPDATE_DIARY_ERROR\":\n      return state;\n\n    // DELETE_DIARY\n    case \"DELETE_DIARY\":\n      return state;\n\n    // If Create Project\n    case \"CREATE_NOTIFICATION\":\n      return state;\n\n    // If Error occurs\n    case \"CREATE_NOTIFICATION_ERROR\":\n      return state;\n\n    default:\n      return state;\n  }\n};\n\nexport default diaryReducer;\n","// Initial State\nconst data = {\n  showOtherDiaries: true,\n};\n\n// Data Reducer\nconst dataReducer = (state = data, action) => {\n  switch (action.type) {\n    case \"UDPATE_SHOW_DIARIES\":\n      return { ...state, showOtherDiaries: action.value };\n\n    default:\n      return state;\n  }\n};\n\nexport default dataReducer;\n","import authReducer from \"./authReducer\";\nimport entryReducer from \"./entryReducer\";\nimport diaryReducer from \"./diaryReducer\";\nimport dataReducer from \"./dataReducer\";\nimport { combineReducers } from \"redux\";\nimport { firestoreReducer } from \"redux-firestore\";\nimport { firebaseReducer } from \"react-redux-firebase\";\n\n// Root Reducer\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  diary: diaryReducer,\n  entry: entryReducer,\n  data: dataReducer,\n  firestore: firestoreReducer, // To sync local State with Database\n  firebase: firebaseReducer, // To sync firebase authentication service with our local state\n});\n\nexport default rootReducer;\n","import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\n// Your web app's Firebase configuration\n\nexport const firebaseConfig = {\n  apiKey: \"AIzaSyAgcTa_9fprc72HrX9FfFPE6jsNTzjxk0s\",\n  authDomain: \"dairy-ccl.firebaseapp.com\",\n  projectId: \"dairy-ccl\",\n  storageBucket: \"dairy-ccl.appspot.com\",\n  messagingSenderId: \"94969738248\",\n  appId: \"1:94969738248:web:9145b4dd6ab85eb32b0dbd\",\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig); // Connect to firebase project\nfirebase.firestore().settings({ timestampsInSnapshots: true });\n\nexport default firebase;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n// Redux\nimport { createStore, applyMiddleware } from \"redux\";\nimport rootReducer from \"./store/reducers/rootReducer\";\nimport { Provider, useSelector } from \"react-redux\";\nimport thunk from \"redux-thunk\";\n// Firebase\nimport firebase from \"./config/fbConfig\";\nimport {\n  isLoaded,\n  ReactReduxFirebaseProvider,\n  getFirebase,\n} from \"react-redux-firebase\";\nimport { createFirestoreInstance } from \"redux-firestore\";\n\n// Store and setup thunk\n// By applying thunk we can return functions in our action creators\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(thunk.withExtraArgument({ getFirebase }))\n);\n\n// RRF Config\nconst rrfConfig = {\n  userProfile: \"users\",\n  useFirestoreForProfile: true,\n};\n\n// React Redux Firebase - Props\nconst rrfProps = {\n  firebase,\n  config: rrfConfig, // For setting up users,\n  dispatch: store.dispatch,\n  createFirestoreInstance,\n};\n\n// Auth Is Loaded function\nfunction AuthIsLoaded({ children }) {\n  const auth = useSelector((state) => state.firebase.auth);\n  if (!isLoaded(auth)) return <div></div>;\n  return children;\n}\n\n// Render\nReactDOM.render(\n  <Provider store={store}>\n    <ReactReduxFirebaseProvider {...rrfProps}>\n      <React.StrictMode>\n        <AuthIsLoaded>\n          <App />\n        </AuthIsLoaded>\n      </React.StrictMode>\n    </ReactReduxFirebaseProvider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// // Render\n// ReactDOM.render(\n//   <Provider store={store}>\n//     <ReactReduxFirebaseProvider {...rrfProps}>\n//       <AuthIsLoaded>\n//         <App />\n//       </AuthIsLoaded>\n//     </ReactReduxFirebaseProvider>\n//   </Provider>,\n//   document.getElementById(\"root\")\n// );\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}